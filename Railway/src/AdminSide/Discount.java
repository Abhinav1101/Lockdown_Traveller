/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AdminSide;

import railway.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import static railway.JdbcConnection.classForName;
import static railway.JdbcConnection.getConnection;
import static railway.JdbcConnection.password;
import static railway.JdbcConnection.username;
import static railway.JdbcConnection.username;
/**
 *
 * @author abhi
 */
public class Discount extends javax.swing.JFrame {

    /**
     * Creates new form Discount
     */
    public Discount() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        reset = new javax.swing.JButton();
        discount = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        fromdate = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        todate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        above3000 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        above5000 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        reset.setText("Reset Expenditure");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        discount.setText("Give Discount");
        discount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountActionPerformed(evt);
            }
        });

        jLabel1.setText("From Date");

        jLabel2.setText("To Date");

        jLabel3.setText("Above 3000");

        jLabel4.setText("Above 5000");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(326, 326, 326)
                        .addComponent(reset)
                        .addGap(42, 42, 42)
                        .addComponent(discount))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fromdate, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(35, 35, 35)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(todate, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(80, 80, 80)
                                .addComponent(jLabel2)))
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(above3000, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(above5000, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(255, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(203, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(todate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fromdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(above3000, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(above5000, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reset)
                    .addComponent(discount))
                .addGap(230, 230, 230))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void discountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountActionPerformed
        // TODO add your handling code here:
        
        //Giving discount to the users
        
        String fromDate,toDate;
        int discount1,discount2;
        fromDate = fromdate.getText();
        toDate = todate.getText();
        discount1 = Integer.parseInt(above3000.getText());
        discount2 = Integer.parseInt(above5000.getText());
        java.time.format.DateTimeFormatter formatter1 = java.time.format.DateTimeFormatter.ofPattern("dd/MM/yyyy");
        java.time.LocalDate fromAsDate = java.time.LocalDate.parse(fromDate, formatter1);
        
        java.time.format.DateTimeFormatter formatter2 = java.time.format.DateTimeFormatter.ofPattern("dd/MM/yyyy");
        java.time.LocalDate toAsDate = java.time.LocalDate.parse(toDate, formatter2);
        
        java.sql.Date sqlDateFrom = java.sql.Date.valueOf(fromAsDate);
        java.sql.Date sqlDateTo = java.sql.Date.valueOf(toAsDate);
        
        Connection con=null;
        
        try{
            Class.forName(classForName);
            con = DriverManager.getConnection(getConnection, username,password);
            
            
            String sql = "Select username,amount from userExpenditure";
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            int discountPercent=0,amount=0;
            while(rs.next()){
                amount = rs.getInt(2);
                if(amount>5000){
                    String sql1 = "Update Passenger set discount=? where username=?";
                    PreparedStatement pst1 = con.prepareStatement(sql1);
                    pst1.setInt(1, discount2);
                    pst1.setString(2, rs.getString(1));
                    pst1.executeUpdate();
                }
                else if(amount>3000){
                    String sql1 = "Update Passenger set discount=? where username=?";
                    PreparedStatement pst1 = con.prepareStatement(sql1);
                    pst1.setInt(1, discount1);
                    pst1.setString(2, rs.getString(1));
                    pst1.executeUpdate();
                }
                    
            }
            
            
            sql = "DELETE from userExpenditure where not username = 'admin'";
            pst = con.prepareStatement(sql);
            pst.executeUpdate();
            
            sql = "UPDATE userExpenditure SET fromDate=?,toDate =?";
            pst = con.prepareStatement(sql);
            pst.setDate(1, sqlDateFrom);
            pst.setDate(2, sqlDateTo);
            pst.executeUpdate();
            
            AdminPage adminPage = new AdminPage();
            adminPage.setVisible(true);
            dispose();
            
        }catch(Exception e){
            System.out.println("Error in giving discount to users");
            JOptionPane.showMessageDialog(null, e);
        }finally {
                try {
                    
                    if (con != null) {
                        con.close();
                    }
                } catch (SQLException e) {
                    System.out.println("Connection not closed properly");
                }
            }

        
    }//GEN-LAST:event_discountActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        
        //Resetting the expenditure so that expenditure can be counted from today
        
        Connection con=null;
        
        try{
            Class.forName(classForName);
            con = DriverManager.getConnection(getConnection, username,password);
            String sql = "DELETE from userExpenditure where not username = 'admin'";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.executeUpdate();
            
            
            AdminPage adminPage = new AdminPage();
            adminPage.setVisible(true);
            dispose();
        }catch(Exception e){
            System.out.println("Error in resetting expenditure of users");
            JOptionPane.showMessageDialog(null, e);
        }finally {
                try {
                    
                    if (con != null) {
                        con.close();
                    }
                } catch (SQLException e) {
                    System.out.println("Connection not closed properly");
                }
            }
        
    }//GEN-LAST:event_resetActionPerformed
    
    
    /**
     * @param args the command line arguments
     */
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField above3000;
    private javax.swing.JTextField above5000;
    private javax.swing.JButton discount;
    private javax.swing.JTextField fromdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton reset;
    private javax.swing.JTextField todate;
    // End of variables declaration//GEN-END:variables
}
