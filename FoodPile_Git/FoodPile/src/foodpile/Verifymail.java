/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package foodpile;
import static foodpile.JdbcConnection.classForName;
import static foodpile.JdbcConnection.getConnection;
import static foodpile.JdbcConnection.password;
import static foodpile.JdbcConnection.username;
import java.net.PasswordAuthentication;
import java.util.*;
import javax.mail.Session;
import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.*;
import java.io.IOException;
import java.util.Properties;    
import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import java.lang.Math; 
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.util.*;
import java.io.*;
import java.net.Socket;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
/**
 *
 * @author iayus
 */
public class Verifymail extends javax.swing.JFrame {

    /**
     * Creates new form Verifymail
     */
    public Verifymail() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sendotp = new javax.swing.JButton();
        verifyotp = new javax.swing.JButton();
        otpfield = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        sendotp.setText("Send OTP");
        sendotp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendotpActionPerformed(evt);
            }
        });

        verifyotp.setText("Verify OTP");
        verifyotp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verifyotpActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("You need to verify your mail to proceed further");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Enter the OTP sent to your mail");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(verifyotp, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(otpfield, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(62, 62, 62))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel1)
                        .addGap(29, 29, 29)
                        .addComponent(sendotp, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sendotp, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 161, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(otpfield, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(verifyotp, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
       String s1=null;
    private void sendotpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendotpActionPerformed
        // TODO add your handling code here:
        /*
        System.out.print("Sending");
        try{
        Properties prop = new Properties();
        prop.put("mail.smtp.auth","true");
        prop.put("mail.smtp.starttls.enable","true");
        prop.put("mail.smtp.host","smtp.gmail.com");
        prop.put("mail.smtp.port","587");
        String mymail = "bytecode333@gmail.com";
        String pass = "qwerty@123";
        Session session = Session.getInstance(prop,new javax.mail.Authenticator() {
                protected javax.mail.PasswordAuthentication getPasswordAuthentication() {
                    return new javax.mail.PasswordAuthentication(mymail,pass);
                }
              });
        String rec="";
        Class.forName(classForName);
            Connection con = DriverManager.getConnection(getConnection, username,password);
            PreparedStatement ps=con.prepareStatement("select * from users where Username=?");
            ps.setString(1, Login.loggedInUser);
            ResultSet rs=ps.executeQuery();
            while(rs.next())
            {
                rec=rs.getString("emailId");
            }
        Message mess = prepareMessage(session,mymail,rec);
        Transport.send(mess); 
        System.out.println("20");
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        System.out.print("Message sent");
        */
        int res=0;
        try{
            Socket s = new Socket("localhost",6666);
            DataOutputStream dout = new DataOutputStream(s.getOutputStream());
            dout.writeUTF("OTP");
            dout.writeUTF("sendOTP");
            
            dout.writeUTF(Login.loggedInUser);
            
            dout.writeUTF("null");
            dout.flush();

            DataInputStream din = new DataInputStream(s.getInputStream());
            s1 =  din.readUTF();
            dout.close();
            s.close();
            if(s1!=null){
                res=1;
            }
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        if(res==1){
            JOptionPane.showMessageDialog(null, "OTP has been sent to email of "+Login.loggedInUser);
        }
        else{
            JOptionPane.showMessageDialog(null, "Some error occurred in sending otp to "+Login.loggedInUser);
        }
    }//GEN-LAST:event_sendotpActionPerformed

    private void verifyotpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verifyotpActionPerformed
        // TODO add your handling code here:
        String val=otpfield.getText();
        
        if(val.equals(s1))
        {
            try{
                /*
                Class.forName(classForName);
                Connection con = DriverManager.getConnection(getConnection, username,password);
                String sql1 = "Update  users Set verify='Yes' where Username=?";
                PreparedStatement pst1 = con.prepareStatement(sql1);
                        pst1.setString(1, Login.loggedInUser);
                        pst1.executeUpdate();
                */
                
                int res=0;
                Socket s = new Socket("localhost",6666);
                DataOutputStream dout = new DataOutputStream(s.getOutputStream());
                dout.writeUTF("OTP");
                dout.writeUTF("verifyOTP");
                dout.writeUTF(Login.loggedInUser);

                dout.writeUTF("null");
                dout.flush();

                DataInputStream din = new DataInputStream(s.getInputStream());
                res =  din.read();
                dout.close();
                s.close();
                
                
                if(res==1){
                    JOptionPane.showMessageDialog(null, "Your account has been verified. Enjoy the application");
                    DashboardFood obj=new DashboardFood();
                    obj.setVisible(true);
                    setVisible(false);
                }
                else{
                    JOptionPane.showMessageDialog(this, "Some error occured try again");
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
        }
        else
            JOptionPane.showMessageDialog(null, "Your entered value does not match");
        /*
        int res=0;
        try{
            Socket s = new Socket("localhost",6666);
            DataOutputStream dout = new DataOutputStream(s.getOutputStream());
            dout.writeUTF("OTP");
            dout.writeUTF("verifyOTP");
            dout.writeUTF(Login.loggedInUser);
            dout.writeUTF(val);
            
            dout.writeUTF("null");
            dout.flush();

            DataInputStream din = new DataInputStream(s.getInputStream());
            res =  din.read();
            dout.close();
            s.close();
        }catch(Exception e){
            System.out.println("Error in otp verification");
        }
        if(res==1){
            JOptionPane.showMessageDialog(null, "Your account has been verified. Enjoy the application");
            DashboardFood obj=new DashboardFood();
            obj.setVisible(true);
            setVisible(false);
        }
        else{
            JOptionPane.showMessageDialog(null, "Your entered value does not match");
        }
        */
    }//GEN-LAST:event_verifyotpActionPerformed
  /*
    private Message prepareMessage(Session session,String mymail, String rec)
    {
        try{
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress(mymail));
            message.setRecipient(Message.RecipientType.TO, new InternetAddress(rec));
            message.setSubject("hello");
            int otp=(int)(10000000*Math.random());
            otp=otp%10000;
            s1=String.valueOf(otp);
            JOptionPane.showMessageDialog(null, "OTP has been sent to email of "+Login.loggedInUser);
            message.setText("Your otp for email verification is :"+otp);
            return message;
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
        return null;
    }
    */
    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField otpfield;
    private javax.swing.JButton sendotp;
    private javax.swing.JButton verifyotp;
    // End of variables declaration//GEN-END:variables
}
